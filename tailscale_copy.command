#!/bin/bash

clear
echo "üü¶ Coppy folders from MacOS to Windows"
echo "üîπ Drag a folder to this window and press Enter to start"
echo ""

read -e -p "üìÅ Folder: " SRC

# Remove quotes if any
SRC=${SRC%\"}
SRC=${SRC#\"}

if [ ! -d "$SRC" ]; then
  echo "‚ùå Invalid path. Drag a valid folder."
  read -p "Press Enter to exit"
  exit 1
fi

# Load local config if exists, otherwise use default values
# Carrega configura√ß√£o local se existir, sen√£o usa valores padr√£o
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CONFIG_FILE="$SCRIPT_DIR/config.local.sh"

if [ -f "$CONFIG_FILE" ]; then
    source "$CONFIG_FILE"
    echo "‚úÖ Configura√ß√£o local carregada"
else
    echo "‚ö†Ô∏è Arquivo config.local.sh n√£o encontrado em: $SCRIPT_DIR"
    echo "üìù Crie o arquivo config.local.sh com suas configura√ß√µes"
    echo "üìã Use o arquivo config.example.sh como modelo"
    
    # Valores padr√£o (exemplo)
    PUSHOVER_USER="your_pushover_user_key"
    PUSHOVER_TOKEN="your_pushover_api_token"
    DEST_USER="windows_username"
    DEST_IP="100.x.x.x"
    DEST_PATH="/c/Tailscale"
fi
PASTA_NOME=$(basename "$SRC") # Folder name

echo ""
echo "üîÅ Starting copy with automatic reconnection in case of failure"
echo "üìÇ Source: $SRC"
echo "üìç Destination: ${DEST_USER}@${DEST_IP}:${DEST_PATH}/${PASTA_NOME}"
echo "üì¶ Ignoring files: .DS_Store"
echo "-----------------------------------------------"
echo ""

# Loop until rsync returns successfully
while true; do
  rsync -avh --progress --partial --inplace --exclude='.DS_Store' "$SRC" "${DEST_USER}@${DEST_IP}:${DEST_PATH}/"
  STATUS=$?

  if [ $STATUS -eq 0 ]; then
    echo ""
    echo "‚úÖ Copy completed successfully!"

    # Send Pushover notification
    curl -s \
      -F "token=$PUSHOVER_TOKEN" \
      -F "user=$PUSHOVER_USER" \
      -F "title=‚úÖ Copy completed" \
      -F "message=Copy completed to:"$'\n'"$PASTA_NOME" \
      https://api.pushover.net/1/messages.json

    break
  else
    echo ""
    echo "‚ö†Ô∏è Connection failed or was interrupted (status $STATUS). Trying again in 30 seconds..."

    # Send error notification via Pushover
    curl -s \
      -F "token=$PUSHOVER_TOKEN" \
      -F "user=$PUSHOVER_USER" \
      -F "title=‚ö†Ô∏è Connection error" \
      -F "message=Failed to send: $PASTA_NOME"$'\n'"Status: $STATUS"$'\n'"Trying again in 30s..." \
      https://api.pushover.net/1/messages.json

    sleep 30
  fi
done

read -p "Press Enter to exit"